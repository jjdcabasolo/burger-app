{"version":3,"sources":["hoc/Auxilliary.js","components/Navigation/Toolbar/Toolbar.js","components/Layout/SidebarMobile/SidebarMobile.js","components/HomePages/Introduction/Introduction.js","components/HomePages/BurgerBackground/BurgerBackground.js","components/HomePages/IngredientComponent/IngredientComponent.js","components/HomePages/BunComponent/BunComponent.js","components/HomePages/Footer/Footer.js","components/HomePages/HomePages.js","containers/Home/Home.js","components/NotFound/NotFound.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","store/actions/orders.js","store/actions/actionTypes.js","components/Burger/Receipt/Receipt.js","components/Order/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/UI/Ingredients/Ingredients.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","containers/Orders/Order/Order.js","components/Order/OrderTools/OrderTools.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/orders.js","index.js"],"names":["auxilliary","props","children","toolbar","currentPage","isHome","activeItem","toUpperCase","react_default","a","createElement","Menu","fixed","borderless","size","inverted","isNight","id","Container","sidebarVisible","className","Item","Button","icon","onClick","openSidebar","header","as","content","active","react_reveal","right","collapse","opposite","when","duration","sidebar","Auxilliary","Sidebar","Pushable","style","overflowY","height","animation","vertical","visible","Header","Icon","name","closeSidebar","Link","to","itemClick","Toolbar_Toolbar","toggleNight","Pusher","backgroundColor","introduction","contents","key","fontSize","fontWeight","delay","top","cascade","marginTop","marginBottom","animated","basic","Content","hidden","map","element","burgerBackground","Divider","horizontal","textTransform","bottom","ingredientComponent","Grid","stackable","centered","columns","Row","Column","textAlign","verticalAlign","left","bunComponent","Footer","Segment","divided","width","List","link","color","homePages","pages","Introduction","BurgerBackground","BunComponent","IngredientComponent","HomePages_Footer_Footer","index","text","Home","state","animate","Array","fill","animateOn","animateCopy","Object","toConsumableArray","_this","setState","animateOff","_this2","this","react_fullpage_default","sectionsColor","render","_ref","_","fullpageApi","Wrapper","HomePages","PureComponent","notFound","iconName","mainMessage","subMessage","burgerIngredient","type","burger","transformedIngredients","ingredient","ingredients","push","BurgerIngredient_BurgerIngredient","length","margin","block","attached","nightStyle","buildControl","Table","Cell","label","Description","description","Group","buttons","disabled","removeIngredient","removed","added","controls","buildControls","unstackable","HeaderCell","Body","BuildControl_BuildControl","ingredientAdded","ingredientRemoved","ingredientRemove","price","toFixed","stepNumber","clear","canOrder","changeStep","orderSummary","objectSpread","showCheckout","bun","total","ingredientSummary","keys","ingredientKey","itemPrices","parseFloat","orderAdded","orderDetails","burgerIngredients","burgerPrice","orderDetailsAdded","Receipt","hasError","isModalOpen","handleOpen","handleClose","inputMap","data","entry","value","form","classname","Modal","trigger","open","onClose","Actions","reOrderDetails","onOrderAdded","reOrderIngredients","reOrderPrice","handleReOrderClose","totalPrice","clearBuilder","history","Component","connect","build","order","dispatch","onOrderDetailAdded","ordersActions","contactData","changeState","Form","inputTitle","placeholder","input","Input","error","onChange","autoHeight","control","TextArea","Checkout","changeHandler","findIndex","x","checkoutContinuedHandler","isDataComplete","item","formComplete","ContactData_ContactData","labelColor","salad","tomato","cheese","meat","Label","image","Detail","showTotal","INGREDIENT_PRICES","BurgerBuilder","updatePurchaseState","reduce","sum","boolean","disabledInfo","rightPanelStyle","down","Burger_Burger","ingredientQueue","Ingredients_Ingredients","up","BuildControls_BuildControls","onIngredientAdded","onIngredientRemoved","onIngredientClear","ordered","purchaseHander","onIngredientsClear","OrderSummary_OrderSummary","containers_Checkout_Checkout","assign","cancelOrder","cancelOrderHander","addOrder","burgerState","Burger_Receipt_Receipt","ingredientName","actions","Order","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isVisible","changeVisibility","getRandomInt","max","Math","floor","random","setTimeout","dateSplit","date","toLocaleString","split","isCardView","Transition","hide","show","computer","tablet","Card","loadData","orders","count","orderRemoved","orderTools","isText","ingredientSort","hasContent","isSaladActive","toggleIngredient","isTomatoActive","isMeatActive","isCheeseActive","changeLayout","activeLayout","switchViewSort","statename","Responsive","minWidth","onlyTablet","onlyComputer","display","activeSort","toggleOrder","dateOrder","marginRight","maxWidth","priceOrder","onlyMobile","isOpen","toggleTools","position","document","getElementById","transform","Orders","isMobileToolsOpen","details","showCards","addContactDetails","address","number","href","email","filterIngredients","filteredOrders","ordersLocal","forEach","toPush","sort","b","Date","e","resetView","defineProperty","switchViewSortHandler","_ref2","toggleIngredientHandler","toggleToolsHandler","updateItem","message","NotFound","orderStructure","Orders_Order_Order","addOrderDetails","removeOrder","hideCards","compact","selectable","singleLine","sorted","OrderTools_OrderTools","orderData","borderStyle","borderColor","borderRadius","boxShadow","App","window","location","hash","replace","isNightMode","showScroll","itemClickHandler","sidebarHandler","nightModeHandler","overflow","SidebarMobile_SidebarMobile","Switch","Route","path","containers_BurgerBuilder_BurgerBuilder","addOrderHandler","containers_Orders_Orders","exact","containers_Home_Home","Boolean","hostname","match","updateObject","oldObject","updatedValues","ingredientPrices","initialState","addIngredient","action","concat","updatedIngredientQueue","reverse","indexOf","splice","removeIngredientInstances","lowercasedName","toLowerCase","updatedArray","filter","result","reducer","arguments","undefined","transformedOrder","lotno","stree","brggy","cimun","provi","newOrder","fname","lname","numbe","updatedOrders","answer","find","rootReducer","combineReducers","burgerBuilderReducer","ordersReducer","store","createStore","app","es","HashRouter","base","src_App","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0265ef30.chunk.js","sourcesContent":["const auxilliary = (props) => props.children;\n\nexport default auxilliary;\n","import React from 'react';\nimport { Button, Container, Menu } from 'semantic-ui-react';\n\nimport './Toolbar.css';\nimport { Slide } from 'react-reveal';\n\nconst toolbar = (props) => {\n  const isHome = props.activeItem === 'home' || props.activeItem === '';\n\n  let currentPage;\n  if (isHome) {\n    currentPage = 'BURGERS! ¬';\n  } else {\n    currentPage = props.activeItem.toUpperCase() + ' ¬';\n  }\n\n  return (\n    <Menu\n      fixed='top'\n      borderless\n      size='large'\n      inverted={props.isNight}\n      id='toolbar-navbar'\n    >\n      <Container\n        id={props.sidebarVisible ? 'toolbar-container-adjust' : null}\n        className='toolbar-container'\n      >\n        <Menu.Item>\n          <Button\n            icon='sidebar'\n            onClick={props.openSidebar}\n            inverted={props.isNight}\n            id='toolbar-button-icon'\n            className='toolbar-sidebar'\n          />\n        </Menu.Item>\n\n        {/* <Menu.Item>\n          <Button\n            icon={props.isNight?'sun':'moon'}\n            onClick={props.toggleNight}\n            inverted={props.isNight}\n            id='toolbar-button-icon'\n            className='toolbar-night-mode'\n          />\n        </Menu.Item> */}\n\n        <Menu.Item\n          header\n          as='div'\n          content={currentPage}\n          active={true}\n          id='toolbar-current-page'\n        />\n\n        <Slide\n          right\n          collapse\n          opposite\n          when={isHome}\n          duration={300}>\n          <Menu.Item\n            header\n            as='div'\n            content='scroll!'\n            icon='arrows alternate vertical'\n            className='secondary-font'\n            active={true}\n            id='toolbar-scroll' />\n        </Slide>\n      </Container>\n    </Menu>\n  );\n}\n\nexport default toolbar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Header, Icon, Menu, Sidebar } from 'semantic-ui-react';\n\nimport Aux from '../../../hoc/Auxilliary';\nimport Toolbar from '../../Navigation/Toolbar/Toolbar';\n\nimport './SidebarMobile.css';\n\nconst sidebar = (props) => {\n  return (\n    <Aux>\n      <Sidebar.Pushable style={{ overflowY: 'hidden', height: '100vh' }}>\n        <Sidebar\n          as={Menu}\n          animation='push'\n          vertical\n          size='massive'\n          visible={props.sidebarVisible}\n          inverted={props.isNight}\n          className='sidebarmobile-menu'\n        >\n          <Menu.Item className='sidebarmobile-title'>\n            <Header\n              as='h1'\n              inverted={props.isNight}\n              className='secondary-font'\n            >\n              the list of other pages on this awesome website: &nbsp;\n            </Header>\n            <Header\n              as='h1'\n              inverted={props.isNight}\n              className='secondary-font'\n            >\n              <Icon\n                name='cancel'\n                onClick={() => props.closeSidebar()}\n                id='sidebarmobile-close'\n              />\n            </Header>\n          </Menu.Item>\n\n          <Link to='/'>\n            <Menu.Item\n              as='div'\n              content='HOME ¬'\n              active={props.activeItem === 'home'}\n              onClick={() => {\n                props.itemClick('', { name: 'home' });\n                props.closeSidebar();\n              }}\n              id='sidebarmobile-item-home'\n            />\n          </Link>\n\n          <Link to='/builder'>\n            <Menu.Item\n              as='div'\n              content='BUILDER ¬'\n              active={props.activeItem === 'builder'}\n              onClick={() => {\n                props.itemClick('', { name: 'builder' });\n                props.closeSidebar();\n              }}\n              id='sidebarmobile-item-builder'\n            />\n          </Link>\n\n          <Link to='/orders'>\n            <Menu.Item\n              as='div'\n              content='ORDERS ¬'\n              active={props.activeItem === 'orders'}\n              onClick={() => {\n                props.itemClick('', { name: 'orders' });\n                props.closeSidebar();\n              }}\n              id='sidebarmobile-item-orders'\n            />\n          </Link>\n\n          <Link to='/help'>\n            <Menu.Item\n              as='div'\n              content='HELP ¬'\n              active={props.activeItem === 'help'}\n              onClick={() => {\n                props.itemClick('', { name: 'help' });\n                props.closeSidebar();\n              }}\n              id='sidebarmobile-item-help'\n            />\n          </Link>\n        </Sidebar>\n\n        <Toolbar\n          itemClick={props.itemClick}\n          activeItem={props.activeItem}\n          openSidebar={props.openSidebar}\n          sidebarVisible={props.sidebarVisible}\n          isNight={props.isNight}\n          toggleNight={props.toggleNight}\n        />\n\n        <Sidebar.Pusher\n          onClick={props.closeSidebar}\n          style={props.isNight ? { backgroundColor: '#333333' } : null}\n        >\n          <main className={props.activeItem === 'builder' ? 'sidebar-content-builder' : 'sidebar-content'}>\n            {props.children}\n          </main>\n        </Sidebar.Pusher>\n      </Sidebar.Pushable>\n    </Aux>\n  );\n}\n\nexport default sidebar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Button, Header, Icon } from 'semantic-ui-react';\nimport { Fade } from 'react-reveal';\n\nimport Aux from '../../../hoc/Auxilliary';\n\nconst introduction = (props) => {\n  const contents = [\n    {\n      key: \"1-title\",\n      content: (\n        <Header\n          as='h1'\n          style={{\n            fontSize: '6em',\n            fontWeight: 'normal',\n          }}\n          className='primary-font'\n        >\n          <Fade delay={100} top cascade>\n            BURGERS!\n          </Fade>\n        </Header>\n      ),\n    },\n    {\n      key: \"1-subtitle\",\n      content: (\n        <Header\n          as='h2'\n          style={{\n            fontSize: '2.25em',\n            fontWeight: 'normal',\n          }}\n          className='secondary-font'\n        >\n          <Fade delay={1000}><span>Build. </span></Fade>\n          <Fade delay={1500}><span>Order. </span></Fade>\n          <Fade delay={2000}><span>Eat.</span></Fade>\n        </Header>\n      ),\n    },\n    {\n      key: \"1-content\",\n      content: (\n        <Fade delay={2500}>\n          <Header\n            content='Your do-it-yourself burger delivered right in front of your doorstep!'\n            style={{\n              fontSize: '1.5em',\n              fontWeight: 'normal',\n              marginTop: '1em',\n              marginBottom: '2em',\n            }}\n            className='secondary-font'\n          />\n        </Fade>\n      ),\n    },\n    {\n      key: \"1-start-button\",\n      content: (\n        <Fade delay={3000}>\n          <Link to='/builder'>\n            <Button\n              animated\n              basic\n              size='huge'\n              name='builder'\n              active={props.activeItem === 'builder'}\n              onClick={props.itemClick}\n              // inverted={props.isNight}\n              className='primary-font'\n              id='home-builder'\n            >\n              <Button.Content visible className='secondary-font'>get started</Button.Content>\n              <Button.Content hidden>\n                <Icon name='arrow right' />\n              </Button.Content>\n            </Button>\n          </Link>\n        </Fade>\n      ),\n    },\n  ];\n\n  return (\n    <Aux>\n      {\n        contents.map((element) => {\n          return (\n            <Aux key={element.key}>\n              {element.content}\n            </Aux>\n          );\n        })\n      }\n    </Aux>\n  );\n}\n\nexport default introduction;\n","import React from 'react';\n\nimport { Divider, Header } from 'semantic-ui-react';\nimport { Fade } from 'react-reveal';\n\nimport Aux from '../../../hoc/Auxilliary';\n\nconst burgerBackground = (props) => {\n  const contents = [\n    {    \n      key: '2-title',\n      content: (\n        <Fade top>\n          <Divider\n            as='h2'\n            className='header primary-font'\n            content='The Burger'\n            horizontal\n            style={{\n              textTransform: 'uppercase',\n              fontSize: '2.25em',\n              marginBottom: '1em',\n            }}\n          />\n        </Fade>\n      ),\n    },\n    {\n      key: '2-content',\n      content: (\n        <Fade bottom delay={500}>\n          <Header\n            content='Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum mi lectus, eleifend non varius sit amet, tristique eget leo. Duis ut tristique libero.'\n            style={{\n              fontSize: '1.5em',\n              fontWeight: 'normal',\n            }}\n            className='secondary-font'\n          />\n        </Fade>\n      ),\n    },\n  ];\n\n  return (\n    <Aux>\n      {\n        contents.map((element) => {\n          return (\n            <Aux key={element.key}>\n              {element.content}\n            </Aux>\n          );\n        })\n      }\n    </Aux>\n  );\n}\n\nexport default burgerBackground;\n","import React from 'react';\n\nimport { Divider, Grid, Header } from 'semantic-ui-react';\nimport { Fade } from 'react-reveal';\n\nimport Aux from '../../../hoc/Auxilliary';\n\nconst ingredientComponent = () => {\n  const contents = [\n    {\n      key: '4-title',\n      content: (\n        <Fade top>\n          <Divider\n            as='h2'\n          \n            className='header primary-font'\n            content='Ingredients'\n            horizontal\n            style={{\n              textTransform: 'uppercase',\n              fontSize: '2.25em',\n              marginBottom: '1em',\n            }}\n          />\n        </Fade>\n      ),\n    },\n    {\n      key: '4-content-grid',\n      content: (\n        <Grid stackable centered columns='equal'>\n          <Grid.Row>\n            <Grid.Column textAlign='center' verticalAlign='middle'>\n              <Fade left delay={1000}>\n                <div className=\"Tomato\" style={{ marginTop: '10px' }}></div>\n              </Fade>\n            </Grid.Column>\n            <Grid.Column textAlign='center'>\n              <Fade left delay={1000}>\n                <Header style={{ marginTop: '10px', marginBottom: '-2px' }} className='primary-font'>TOMATO</Header>\n                <p className='home-ingredient-detail secondary-font'>\\tə-ˈmā-(ˌ)tō \\<br />Vegetable plant known for lycopene.</p>\n              </Fade>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column textAlign='center'>\n              <Fade right delay={1500}>\n                <Header style={{ marginTop: '10px', marginBottom: '-2px' }} className='primary-font'>CHEESE</Header>\n                <p className='home-ingredient-detail secondary-font'>\\ˈchēz \\<br />Dairy product derived from milk.</p>\n              </Fade>\n            </Grid.Column>\n            <Grid.Column textAlign='center' verticalAlign='middle'>\n              <Fade right delay={1500}>\n                <div className=\"Cheese\" style={{ marginTop: '7px' }}></div>\n              </Fade>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column textAlign='center' verticalAlign='middle'>\n              <Fade left delay={2000}>\n                <div className=\"Meat\"></div>\n              </Fade>\n            </Grid.Column>\n            <Grid.Column textAlign='center'>\n              <Fade left delay={2000}>\n                <Header style={{ marginTop: '10px', marginBottom: '-2px' }} className='primary-font'>MEAT</Header>\n                <p className='home-ingredient-detail secondary-font'>\\ˈmēt \\<br />Cooked animal flesh.</p>\n              </Fade>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column textAlign='center'>\n              <Fade right delay={2500}>\n                <Header style={{ marginTop: '10px', marginBottom: '-2px' }} className='primary-font'>SALAD</Header>\n                <p className='home-ingredient-detail secondary-font'>\\ˈsa-ləd \\<br />Mixture of vegetables.</p>\n              </Fade>\n            </Grid.Column>\n            <Grid.Column textAlign='center' verticalAlign='middle'>\n              <Fade right delay={2500}>\n                <div className=\"Salad\" style={{ marginTop: '9px' }}></div>\n              </Fade>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      ),\n    },\n    {\n      key: '4-content',\n      content: (\n        <Fade bottom delay={3000}>\n          <Header\n          \n            content='Our signature fundamental ingredients.'\n            style={{\n              fontSize: '1.5em',\n              fontWeight: 'normal',\n              marginTop: '3em',\n            }}\n            className='secondary-font'\n          />\n        </Fade>\n      ),\n    },\n  ];\n\n  return (\n    <Aux>\n      {\n        contents.map((element) => {\n          return (\n            <Aux key={element.key}>\n              {element.content}\n            </Aux>\n          );\n        })\n      }\n    </Aux>\n  );\n}\n\nexport default ingredientComponent;\n","import React from 'react';\n\nimport { Divider, Header } from 'semantic-ui-react';\nimport { Fade } from 'react-reveal';\n\nimport Aux from '../../../hoc/Auxilliary';\n\nconst bunComponent = () => {\n  const contents = [\n    {\n      key: '3-title',\n      content: (\n        <Fade top>\n          <Divider\n            as='h2'\n            className='header primary-font'\n            content='The Bun'\n            horizontal\n            style={{\n              textTransform: 'uppercase',\n              fontSize: '2.25em',\n              marginBottom: '1em',\n            }}\n          />\n        </Fade>\n      ),\n    },\n    {\n      key: '3-content-bread-top',\n      content: (\n        <Fade top delay={500}>\n          <div className=\"BreadTop\">\n            <div className=\"Seeds1\"></div>\n            <div className=\"Seeds2\"></div>\n            <div className=\"Seeds3\"></div>\n            <div className=\"Seeds4\"></div>\n            <div className=\"Seeds5\"></div>\n            <div className=\"Seeds6\"></div>\n          </div>\n        </Fade>\n      ),\n    },\n    {\n      key: '3-content-bread-bottom',\n      content: (\n        <Fade bottom delay={500}>\n          <div className=\"BreadBottom\"></div>\n        </Fade>\n      ),\n    },\n    {\n      key: '3-content',\n      content: (\n        <Fade bottom delay={1500}>\n          <Header\n            content='Bread formed into rounded bun shape, split, and sandwiched to a stack of organic burger ingredients topped with fresh sesame seeds.'\n            style={{\n              marginTop: '2em',\n              fontSize: '1.5em',\n              fontWeight: 'normal',\n            }}\n            className='secondary-font'\n          />\n        </Fade>\n      ),\n    },\n  ];\n\n  return (\n    <Aux>\n      {\n        contents.map((element) => {\n          return (\n            <Aux key={element.key}>\n              {element.content}\n            </Aux>\n          );\n        })\n      }\n    </Aux>\n  );\n}\n\nexport default bunComponent;\n","import React from 'react';\n\nimport { Grid, Header, List, Segment } from 'semantic-ui-react';\n\nimport Aux from '../../../hoc/Auxilliary';\n\nconst Footer = () => {\n  const contents = [\n    {\n      key: '5-title',\n      content: (\n        <Segment\n          vertical\n          style = {{  marginTop: '60vh' }}\n        >\n          <Grid divided stackable>\n            <Grid.Row>\n              <Grid.Column width={3}>\n                <Header\n                  as='h4' content='1234' />\n                <List link >\n                  <List.Item as='a'>qwer</List.Item>\n                  <List.Item as='a'>asdf</List.Item>\n                  <List.Item as='a'>zxcv</List.Item>\n                </List>\n              </Grid.Column>\n              <Grid.Column width={3}>\n                <Header\n                  as='h4' content='5678' />\n                <List link >\n                  <List.Item as='a'>uiop</List.Item>\n                  <List.Item as='a'>jkl;</List.Item>\n                  <List.Item as='a'>bnm,</List.Item>\n                  <List.Item as='a'>--</List.Item>\n                </List>\n              </Grid.Column>\n              <Grid.Column width={10}>\n                <Header as='h4'>\n                  90\n                </Header>\n                <p style={{ color: 'rgba(0,0,0,.4)' }}>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed consectetur scelerisque odio non hendrerit. Integer mollis, nisl non efficitur tempus, leo lorem maximus metus, in pulvinar nulla quam volutpat neque. Suspendisse viverra vitae odio a bibendum. Nullam eleifend vel sapien eget lacinia. Ut dictum ac ex at pharetra. Curabitur ligula magna, interdum sed imperdiet non, vestibulum aliquam justo. Pellentesque viverra lacus ut laoreet convallis. Integer eget auctor elit.\n                </p>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment >\n      ),\n    },\n  ];\n\n  return (\n    <Aux>\n      {\n        contents.map((element) => {\n          return (\n            <Aux key={element.key}>\n              {element.content}\n            </Aux>\n          );\n        })\n      }\n    </Aux>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nimport { Container, Segment } from 'semantic-ui-react';\n\nimport Aux from './../../hoc/Auxilliary';\n\nimport Introduction from './Introduction/Introduction';\nimport BurgerBackground from './BurgerBackground/BurgerBackground';\nimport IngredientComponent from './IngredientComponent/IngredientComponent';\nimport BunComponent from './BunComponent/BunComponent';\nimport Footer from './Footer/Footer';\n\nconst homePages = (props) => {\n  const pages = [\n    (<Introduction activeItem={props.activeItem} itemClick={props.itemClick}/>),\n    (<BurgerBackground />),\n    (<BunComponent />),\n    (<IngredientComponent />),\n    (<Footer />),\n  ];\n\n  return (\n    <Aux>\n      { pages.map((element, index) => {\n        return (\n          <div className='section' key={index}>\n            <Segment textAlign='center' vertical>\n              <Container text>\n                {element}\n              </Container>\n            </Segment>\n          </div>\n        )})\n      }\n    </Aux>\n  );\n}\n\nexport default homePages;\n","import React, { PureComponent } from 'react';\n\nimport ReactFullpage from '@fullpage/react-fullpage';\n\nimport './Home.css';\nimport '../../components/Burger/Burger.css';\n\nimport HomePages from '../../components/HomePages/HomePages';\n\nclass Home extends PureComponent {\n  state = {\n    animate: Array(5).fill(false),\n  }\n\n  animateOn = (index) => {\n    const animateCopy = [...this.state.animate];\n    animateCopy[index] = true;\n    this.setState({ animate: animateCopy });\n  }\n\n  animateOff = (index) => {\n    const animateCopy = [...this.state.animate];\n    animateCopy[index] = false;\n    this.setState({ animate: animateCopy });\n  }\n\n  render() {\n    return (\n      <div >\n        <ReactFullpage\n          sectionsColor= {[]}\n          render={({ _, fullpageApi }) => {\n            return (\n              <ReactFullpage.Wrapper>\n                <HomePages\n                  fullpageApi={fullpageApi}\n                  animateOn={this.animateOn}\n                  animateOff={this.animateOff}\n                  activeItem={this.props.activeItem}\n                  itemClick={this.props.itemClick}\n                />\n              </ReactFullpage.Wrapper>\n            );\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Container, Icon, Segment } from 'semantic-ui-react';\n\nconst notFound = (props) => {\n  return (\n    <Container className='boundary-toolbar-page-content'>\n      <Segment basic textAlign='center' style={{ marginTop: '30%', backgroundColor: 'transparent' }} inverted={props.isNight}>\n        <Icon inverted={props.isNight} name={props.iconName} size='massive'></Icon>\n        <p\n          className='primary-font font-large'\n          style={{\n            fontWeight: '600',\n            marginTop: '1em',\n          }}\n        >\n          {props.mainMessage.toUpperCase()}\n        </p>\n        <p\n          className='secondary-font font-normal'\n          style={{ marginTop: '-1em' }}\n        >\n          {props.subMessage}\n        </p>\n      </Segment>\n    </Container>\n  );\n}\n\nexport default notFound;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Slide } from 'react-reveal';\n\nimport './BurgerIngredient.css'\n\nconst burgerIngredient = (props) => {\n  switch (props.type) {\n    case 'bread-bottom':\n      return (\n        <div className=\"BreadBottom\"></div>\n      );\n\n    case 'bread-top':\n      return (\n        <div className=\"BreadTop\">\n          <div className=\"Seeds1\"></div>\n          <div className=\"Seeds2\"></div>\n          <div className=\"Seeds3\"></div>\n          <div className=\"Seeds4\"></div>\n          <div className=\"Seeds5\"></div>\n          <div className=\"Seeds6\"></div>\n        </div>\n      );\n\n    case 'meat':\n      return (\n        <Slide left>\n          <div className=\"Meat\"></div>\n        </Slide>\n      );\n\n    case 'cheese':\n      return (\n        <Slide left>\n          <div className=\"Cheese\">\n            <div className=\"CheeseDrip1\"></div>\n            <div className=\"CheeseDrip2\"></div>\n            <div className=\"CheeseDrip3\"></div>\n            <div className=\"CheeseDrip4\"></div>\n          </div>\n        </Slide>\n      );\n\n    case 'salad':\n      return (\n        <Slide left>\n          <div className=\"Salad\">\n            <div className=\"SaladLeaf1\"></div>\n            <div className=\"SaladLeaf2\"></div>\n            <div className=\"SaladLeaf3\"></div>\n            <div className=\"SaladLeaf4\"></div>\n            <div className=\"SaladLeaf5\"></div>\n            <div className=\"SaladLeaf6\"></div>\n          </div>\n        </Slide>\n      );\n\n    case 'tomato':\n      return (\n        <Slide left>\n          <div className=\"Tomato\"></div>\n        </Slide>\n      );\n\n    default:\n      break;\n  }\n}\n\nburgerIngredient.propTypes = {\n  type: PropTypes.string.isRequired,\n}\n\nexport default burgerIngredient;\n","import React from 'react';\nimport { Header, Segment } from 'semantic-ui-react';\n\nimport './Burger.css';\n\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n  let transformedIngredients = [];\n  for (const ingredient in props.ingredients) {\n    transformedIngredients.push(<BurgerIngredient key={ingredient} type={props.ingredients[ingredient]} />);\n  }\n\n  if (transformedIngredients.length === 0) {\n    transformedIngredients = <p style={{ margin: '1em 0 1em 0em', fontWeight: '500' }} className='secondary-font'>Please start adding ingredients.</p>;\n  }\n\n  return (\n    <div>\n      <Header\n        block\n        as='h5'\n        attached='top'\n        content='/ BURGER PREVIEW'\n        style={props.isNight ? props.nightStyle[1] : null}\n      />\n\n      <Segment\n        inverted={props.isNight}\n        className='burger-preview-container'\n        attached\n      >\n        <div className='Burger'>\n          <BurgerIngredient type='bread-top' />\n          {transformedIngredients}\n          <BurgerIngredient type='bread-bottom' />\n        </div>\n      </Segment>\n\n      <div className='boundary-burger-preview' />\n    </div>\n  );\n};\n\nexport default burger;\n","import React from 'react';\n\nimport { Button, Icon, List, Table } from 'semantic-ui-react';\nimport './BuildControl.css';\n\nconst buildControl = (props) => (\n  <Table.Row>\n    <Table.Cell>\n      <List inverted={props.isNight}>\n        <List.Item>\n          <Icon name='right triangle' />\n          <List.Content>\n            <List.Header className='secondary-font font-normal'>\n              {props.label}\n            </List.Header>\n            <List.Description className='secondary-font font-normal'>\n              {props.description}\n            </List.Description>\n          </List.Content>\n        </List.Item>\n      </List>\n    </Table.Cell>\n    <Table.Cell textAlign='center' verticalAlign='middle' >\n      <Button.Group\n        buttons={[\n          {\n            disabled: props.disabled,\n            icon: 'trash',\n            key: 'clear',\n            inverted: props.isNight,\n            onClick: () => props.removeIngredient(props.label),\n          },\n          {\n            disabled: props.disabled,\n            icon: 'minus',\n            key: 'less',\n            inverted: props.isNight,\n            onClick: props.removed,\n          },\n          {\n            icon: 'add',\n            inverted: props.isNight,\n            key: 'add',\n            onClick: props.added,\n          },\n        ]}\n      />\n    </Table.Cell>\n  </Table.Row>\n);\n\nexport default buildControl;\n","import React from 'react';\nimport { Button, Header, Segment, Table } from 'semantic-ui-react';\n\nimport BuildControl from './BuildControl/BuildControl';\nimport './BuildControls.css';\n\nconst controls = [\n  {\n    label: 'Salad',\n    type: 'salad',\n    description: 'Mixture of vegetables.',\n  },\n  {\n    label: 'Tomato',\n    type: 'tomato',\n    description: 'Vegetable plant known for lycopene.',\n  },\n  {\n    label: 'Cheese',\n    type: 'cheese',\n    description: 'Dairy product derived from milk.',\n  },\n  {\n    label: 'Meat',\n    type: 'meat',\n    description: 'Cooked animal flesh.',\n  },\n];\n\nconst buildControls = (props) => (\n  <div>\n    <Header\n      block\n      as='h5'\n      attached='top'\n      content='/ MAKE YOUR BURGER'\n      style={props.isNight ? props.nightStyle[1] : null}\n    />\n\n    <Segment\n      attached\n      inverted={props.isNight}\n      style={props.isNight ? props.nightStyle[0] : null}\n      textAlign='center'\n    >\n      <Table unstackable basic='very' inverted={props.isNight}>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell className='secondary-font font-medium'>Ingredients</Table.HeaderCell>\n            <Table.HeaderCell className='secondary-font font-medium' textAlign='center'>Quantity</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {controls.map((element) => {\n            return (\n              <BuildControl\n                key={element.label}\n                label={element.label}\n                description={element.description}\n                added={() => props.ingredientAdded(element.type)}\n                removed={() => props.ingredientRemoved(element.type)}\n                removeIngredient={(label) => props.ingredientRemove(label)}\n                disabled={props.disabled[element.type]}\n                isNight={props.isNight}\n                nightStyle={props.nightStyle}\n              />\n            );\n          })}\n        </Table.Body>\n      </Table>\n\n      <span className='secondary-font buildcontrols-total font-medium'>\n        Total\n\n        <Header\n          as='h2'\n          className='secondary-font'\n          content={'$ ' + props.price.toFixed(2)}\n          inverted={props.isNight} />\n      </span>\n    </Segment>\n\n    {props.stepNumber === 1 ?\n      <Button.Group attached='bottom' className='segment-btn-grp'>\n        <Button\n          content='clear'\n          icon='trash'\n          inverted={props.isNight}\n          onClick={props.clear}\n        />\n        <Button\n          content='proceed'\n          disabled={props.canOrder}\n          icon='shop'\n          inverted={props.isNight}\n          onClick={() => props.changeStep(2)}\n        />\n      </Button.Group>\n      :\n      null\n    }\n\n    <div className='boundary-toolbar-page-content' />\n  </div>\n);\n\nexport default buildControls;\n","import React from 'react';\n\nimport { Button, Header, List, Segment, Table } from 'semantic-ui-react';\n\nimport Aux from '../../../hoc/Auxilliary';\nimport './OrderSummary.css';\n\nconst orderSummary = (props) => {\n  let ingredients = {\n    ...props.ingredients,\n  };\n\n  if (!props.showCheckout) {\n    ingredients = {\n      ...ingredients,\n      bun: 1,\n      total: null,\n    }\n  }\n\n  const ingredientSummary = Object\n    .keys(ingredients)\n    .map((ingredientKey) => {\n      return (\n        <Table.Row key={ingredientKey} className='secondary-font'>\n          <Table.Cell className='font-normal'>\n            <List as='ul' inverted={props.isNight}>\n              <List.Item as='li' key={ingredientKey}>\n                <List.Content>\n                  <List.Header style={{ textTransform: 'capitalize' }} >\n                    {ingredientKey}\n                  </List.Header>\n                </List.Content>\n              </List.Item>\n            </List>\n          </Table.Cell>\n\n          <Table.Cell textAlign='center' verticalAlign='middle' className='font-normal'>\n            {ingredients[ingredientKey]}\n          </Table.Cell>\n\n          <Table.Cell textAlign='center' verticalAlign='middle' className='font-normal'>\n            <div>\n              {ingredientKey === 'total' ?\n                null\n                :\n                '$ ' + props.itemPrices[ingredientKey]\n              }\n            </div>\n          </Table.Cell>\n\n          <Table.Cell textAlign='center' verticalAlign='middle' className='ordersummary-total'>\n            {ingredientKey === 'total' ?\n              '$ ' + parseFloat(props.price).toFixed(2)\n              :\n              '$ ' + (ingredients[ingredientKey] * props.itemPrices[ingredientKey]).toFixed(2)\n            }\n          </Table.Cell>\n        </Table.Row>\n      )\n    });\n\n  return (\n    <Aux>\n      <Header\n        block\n        as='h5'\n        attached='top'\n        content='/ ORDER SUMMARY'\n        style={props.isNight ? props.nightStyle[1] : null} />\n\n      <Segment\n        attached\n        inverted={props.isNight}\n        style={props.isNight ? props.nightStyle[0] : null} >\n\n        <p className='secondary-font font-normal'>Your burger is ready! Please check the summary below.</p>\n\n        <Table unstackable basic inverted={props.isNight} id='ordersummary-checkout'>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell className='secondary-font font-normal'>Ingredients</Table.HeaderCell>\n              <Table.HeaderCell className='secondary-font font-normal' textAlign='center'>Quantity</Table.HeaderCell>\n              <Table.HeaderCell className='secondary-font font-normal' textAlign='center'>Price per piece</Table.HeaderCell>\n              <Table.HeaderCell className='secondary-font font-normal' textAlign='center'>Total</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {ingredientSummary}\n          </Table.Body>\n        </Table>\n      </Segment>\n\n      {props.stepNumber === 2 ?\n        <Button.Group attached='bottom' className='segment-btn-grp'>\n          <Button\n            content='cancel'\n            icon='remove'\n            inverted={props.isNight}\n            onClick={() => props.changeStep(1)}\n          />\n          <Button\n            content='checkout'\n            icon='checkmark'\n            inverted={props.isNight}\n            onClick={() => props.changeStep(3)}\n          />\n        </Button.Group>\n        :\n        null\n      }\n\n      <div className='boundary-toolbar-page-content' />\n    </Aux>\n  );\n};\n\nexport default orderSummary;\n","import * as actionTypes from '../actions/actionTypes';\n\nexport const orderAdded = (orderDetails, burgerIngredients, burgerPrice) => {\n  return {\n    type: actionTypes.ADD_ORDER,\n    orderDetails: orderDetails,\n    burgerIngredients: burgerIngredients,\n    burgerPrice: burgerPrice,\n  };\n}\n\nexport const orderRemove = (order) => {\n  return {\n    type: actionTypes.REMOVE_ORDER,\n    order: order,\n  }\n}\n\nexport const orderDetailsAdded = (orderDetails) => {\n  return {\n    type: actionTypes.ORDER_DETAILS,\n    orderDetails: orderDetails,\n  };\n}\n","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const REMOVE_INGREDIENTS = 'REMOVE_INGREDIENTS';\nexport const REMOVE_ALL_INGREDIENTS = 'REMOVE_ALL_INGREDIENTS';\nexport const LOAD_DATA_REORDER = 'LOAD_DATA_REORDER';\n\nexport const ADD_ORDER = 'ADD_ORDER';\nexport const REMOVE_ORDER = 'REMOVE_ORDER';\nexport const ORDER_DETAILS = 'ORDER_DETAILS';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Button, Divider, Header, List, Segment, Grid, Modal } from 'semantic-ui-react';\n\nimport * as ordersActions from '../../../store/actions/index';\n\nimport Aux from '../../../hoc/Auxilliary';\nimport './Receipt.css';\n\nconst formatInput = (inputMap) => {\n  return [\n    {\n      entry: inputMap[4].value,\n      value: inputMap[0].value + \" \" + inputMap[1].value,\n      icon: \"user\",\n    },\n    {\n      entry: inputMap[2].value,\n      value: inputMap[3].value,\n      icon: \"address card outline\",\n    },\n  ];\n}\n\nclass Receipt extends Component {\n  state = {\n    hasError: false,\n    isModalOpen: false,\n  }\n\n  handleOpen = () => this.setState({ isModalOpen: true })\n\n  handleClose = () => this.setState({ isModalOpen: false })\n\n  render () {\n    const data = formatInput(this.props.inputMap);\n\n    return (\n      <Aux>\n        <Header\n          block\n          as='h5'\n          attached='top'\n          content='/ RECEIPT'\n          style={this.props.isNight ? this.props.nightStyle[1] : null} />\n\n        <Segment\n          attached\n          inverted={this.props.isNight}\n          style={this.props.isNight ? this.props.nightStyle[0] : null} >\n\n          <p className='secondary-font font-normal'>Almost done! Please double check the information you have provided before finally placing the order.</p>\n          <Divider className='receipt-divider-space' />\n\n          {this.props.form ?\n            <Grid>\n              <Grid.Column width={5} textAlign='right' verticalAlign='middle'>\n                <span className='receipt-total'>{'$ ' + parseFloat(this.props.price).toFixed(2)}</span>\n                <p className='font-normal'>cost</p>\n              </Grid.Column>\n              <Grid.Column width={11}>\n                {data.map((element) => {\n                  return (\n                    <List id='receipt' inverted={this.props.isNight}>\n                      <List.Item>\n                        <List.Icon name={element.icon} className='receipt-icon' />\n                        <List.Content>\n                          <List.Header className='secondary-font receipt-value'>\n                            {element.value}\n                          </List.Header>\n                          <List.Description className='secondary-font font-normal'>\n                            {element.entry}\n                          </List.Description>\n                        </List.Content>\n                      </List.Item>\n                    </List>\n                  );\n                })}\n              </Grid.Column>\n            </Grid>\n            :\n            null\n          }\n\n          <Divider className='receipt-divider-space' />\n          <p className='secondary-font font-small'>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum mi lectus, eleifend non varius sit amet, tristique eget leo. Duis ut tristique libero. </p>\n        </Segment>\n\n        <Button.Group attached='bottom' className='segment-btn-grp'>\n          <Button\n            content='builder'\n            icon='add'\n            onClick={() => this.props.changeStep(1)}\n            classname='receipt-builder-btn'\n          />\n          <Button\n            content='delivery'\n            icon='truck'\n            onClick={() => this.props.changeStep(3)}\n          />\n          <Button\n            content='place order'\n            icon='checkmark'\n            onClick={() => this.handleOpen()}\n            className='receipt-place-order'\n          />\n        </Button.Group>\n\n        <Modal\n          trigger={<div />}\n          basic\n          size='small'\n          open={this.state.isModalOpen}\n          onClose={this.handleClose}\n        >\n          <Header content='PLACING ORDER' className='primary-font font-large' />\n          <Modal.Content>\n            <p className='secondary-font font-normal'>\n              Are you really sure you want to place this order?\n            </p>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              basic\n              id='btn-secondary'\n              content='No'\n              icon='remove'\n              inverted\n              onClick={() => this.handleClose()}\n            />\n\n            <Button\n              basic\n              id='btn-primary'\n              content='Yes'\n              icon='checkmark'\n              inverted\n              className='receipt-button-remove-left-border'\n              onClick={() => {\n                if (this.props.reOrderDetails) {\n                  this.props.onOrderAdded(this.props.inputMap, this.props.reOrderIngredients, this.props.reOrderPrice);\n                  this.handleClose();\n                  this.props.handleReOrderClose();\n                } else {\n                  this.props.onOrderAdded(this.props.inputMap, this.props.ingredients, this.props.totalPrice);\n                  this.props.clearBuilder();\n                  this.props.itemClick('', { name: 'orders' });\n                  this.props.history.push('/orders');\n                }\n              }}\n            />\n          </Modal.Actions>\n        </Modal>\n\n        <div className='boundary-toolbar-page-content' />\n      </Aux>\n    )\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.build.ingredients,\n    totalPrice: state.build.totalPrice,\n    inputMap: state.order.inputMap,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onOrderDetailAdded: (orderDetails) => dispatch(ordersActions.orderDetailsAdded(orderDetails)),\n    onOrderAdded: (orderDetails, burgerIngredients, burgerPrice) => dispatch(ordersActions.orderAdded(orderDetails, burgerIngredients, burgerPrice)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Receipt);\n","import React from 'react';\nimport { Form, Grid, TextArea } from 'semantic-ui-react';\n\nimport { Fade } from 'react-reveal';\n\nimport Aux from './../../../hoc/Auxilliary';\nimport './ContactData.css'\n\nconst contactData = (props) => {\n  const { changeState, hasError, inputMap, isNight } = props;\n\n  const contents = [\n    {\n      inputTitle: 'First Name',\n      placeholder: '(and the rest, except the last)',\n      type: 'text',\n    },\n    {\n      inputTitle: 'Last Name',\n      placeholder: 'multiple last name still applies',\n      type: 'text',\n    },\n    {\n      inputTitle: 'Email',\n      placeholder: 'we prefer your gmail',\n      type: 'email',\n    },\n    {\n      inputTitle: 'Contact number',\n      placeholder: 'mobile is waaaaaaaay better',\n      type: 'text',\n    },\n    {\n      inputTitle: 'Delivery address',\n      placeholder: 'you do not want your burger to be delivered to the wrong address',\n    },\n  ];\n\n  return (\n    <Aux>\n      <Form className='fluid' inverted={isNight}>\n        <Grid className='font-normal'>\n          {contents.map((element, index) => {\n\n            let input = (\n              <Form.Input\n                className='secondary-font'\n                error={inputMap[index].error}\n                name={inputMap[index].name}\n                onChange={changeState}\n                placeholder={element.placeholder}\n                type={element.type}\n                value={inputMap[index].value} />\n            )\n\n            if (index === 4) {\n              input = (\n                <Form.Input\n                  autoHeight\n                  className='secondary-font'\n                  control={TextArea}\n                  error={inputMap[index].error}\n                  name={inputMap[index].name}\n                  onChange={changeState}\n                  placeholder={element.placeholder}\n                  value={inputMap[index].value} />\n              )\n            }\n\n            return (\n              <Grid.Row key={index}>\n                <Grid.Column\n                  width={4}\n                  className='secondary-font'\n                  verticalAlign='middle'\n                  textAlign='right'>\n                  {element.inputTitle}\n                </Grid.Column>\n\n                <Grid.Column width={12}>\n                  {input}\n                </Grid.Column>\n              </Grid.Row>\n            );\n          })}\n        </Grid>\n      </Form>\n\n      { hasError ?\n        <Fade>\n          <p className='secondary-font font-normal contactdata-form-message'>fields in red must be filled up to continue</p>\n        </Fade>\n        :\n        null\n      }\n    </Aux>\n  );\n}\n\nexport default contactData;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Header, Segment } from 'semantic-ui-react';\n\nimport ContactData from './../../components/Order/ContactData/ContactData';\n\nimport * as ordersActions from '../../store/actions/index';\nimport Aux from './../../hoc/Auxilliary';\n\nclass Checkout extends Component {\n  state = {\n    hasError: false,\n  }\n\n  changeHandler = (_, { name, value }) => {\n    const inputMap = [...this.props.inputMap];\n    inputMap[inputMap.findIndex(x => x.name === name)].value = value;\n    this.setState({ inputMap: inputMap, hasError: false });\n  }\n\n  checkoutContinuedHandler = () => {\n    let inputMap = [...this.props.inputMap,];\n\n    let isDataComplete = true;\n    for (const item in inputMap) {\n      let conditionEmpty = inputMap[item].value === '';\n\n      if (conditionEmpty) {\n        inputMap[item].error = true;\n        isDataComplete = false;\n      } else {\n        inputMap[item].error = false;\n      }\n    }\n\n    this.setState({ inputMap: inputMap, });\n\n    if (isDataComplete) {\n      this.props.onOrderDetailAdded(this.props.inputMap);\n      this.props.formComplete(true);\n      this.props.changeStep(4);\n    } else {\n      this.setState({ hasError: true });\n      this.props.formComplete(false);\n    }\n  }\n\n  render() {\n    return (\n      <Aux>\n        <Header\n          block\n          as='h5'\n          attached='top'\n          content='/ DELIVERY DETAILS'\n          style={this.props.isNight ? this.props.nightStyle[1] : null}\n        />\n\n        <Segment\n          attached\n          inverted={this.props.isNight}\n          style={this.props.isNight ? this.props.nightStyle[0] : null}\n          content={\n            <ContactData\n              isNight={this.props.isNight}\n              changeState={this.changeHandler}\n              inputMap={this.props.inputMap}\n              hasError={this.state.hasError}\n            />\n          }\n        />\n\n        {this.props.stepNumber === 3 ?\n          <Button.Group attached='bottom' className='segment-btn-grp'>\n            <Button\n              content='cancel'\n              icon='remove'\n              inverted={this.props.isNight}\n              onClick={() => this.props.changeStep(2)}\n              style={{ marginTop: '-1px' }}\n            />\n            <Button\n              content='order'\n              icon='shop'\n              inverted={this.props.isNight}\n              onClick={this.checkoutContinuedHandler}\n            />\n          </Button.Group>\n          :\n          null\n        }\n\n        <div className='boundary-toolbar-page-content' />\n      </Aux>\n    );\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onOrderDetailAdded: (orderDetails) => dispatch(ordersActions.orderDetailsAdded(orderDetails)),\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Checkout);\n","import React from 'react';\n\nimport { Fade } from 'react-reveal';\n\nimport { Label } from 'semantic-ui-react';\nimport './Ingredients.css';\n\nimport Aux from '../../../hoc/Auxilliary';\n\nconst labelColor = {\n  salad: 'green',\n  tomato: 'red',\n  cheese: 'yellow',\n  meat: 'brown',\n}\n\nconst ingredients = (props) => {\n  return (\n    <Aux>\n      {Object\n        .keys(props.ingredients)\n        .map((element, index) => {\n          return (\n            <Label\n              id={'ingredients-' + element}\n              className={'ingredients-margin'}\n              image\n              key={index}\n              size='large'\n              color={labelColor[element]}\n            >\n              {props.ingredients[element]} &nbsp;\n              <Label.Detail className='ingredient-details'>{element.toUpperCase()}</Label.Detail>\n            </Label>\n          );\n        })\n      }\n\n      <Fade left when={props.showTotal}>\n        <Label\n          className='ingredients-margin'\n          image\n          size='large' >\n          {'$ ' + parseFloat(props.totalPrice).toFixed(2)}\n          <Label.Detail>BURGER COST</Label.Detail>\n        </Label>\n      </Fade>\n    </Aux>\n  );\n}\n\nexport default ingredients;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Container, Grid } from 'semantic-ui-react';\nimport './BurgerBuilder.css';\n\nimport { Fade } from 'react-reveal';\n\nimport Aux from '../../hoc/Auxilliary';\n\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Receipt from '../../components/Burger/Receipt/Receipt';\nimport Checkout from '../Checkout/Checkout';\nimport Ingredients from './../../components/UI/Ingredients/Ingredients';\n\nimport * as actions from '../../store/actions';\n\n// mapping of prices\nconst INGREDIENT_PRICES = {\n  salad: 0.50,\n  tomato: 0.40,\n  cheese: 1.30,\n  meat: 0.70,\n  bun: 4.00,\n}\n\nclass BurgerBuilder extends Component {\n  state = { stepNumber: 1, form: false, }\n\n  updatePurchaseState = (ingredients, type) => {\n    const sum = Object\n      .keys(ingredients)\n      .map((ingredientKey) => {\n        return ingredients[ingredientKey];\n      })\n      .reduce((sum, element) => {\n        return sum + element;\n      }, 0);\n\n    return (sum === 0);\n  }\n\n  changeStep = (index) => this.setState({ stepNumber: +index, });\n  formComplete = (boolean) => this.setState({ form: boolean })\n\n  render() {\n    const disabledInfo = { ...this.props.ingredients, }\n\n    for (let key in disabledInfo) { // replaces value with true or false (check if greater than 0)\n      disabledInfo[key] = (disabledInfo[key] <= 0);\n    }\n\n    let rightPanelStyle = 'burgerbuilder-right-step-1';\n    if (this.state.stepNumber === 2) rightPanelStyle = 'burgerbuilder-right-step-2';\n    else if (this.state.stepNumber === 3) rightPanelStyle = 'burgerbuilder-right-step-3';\n    else if (this.state.stepNumber === 4) rightPanelStyle = 'burgerbuilder-right-step-4';\n\n    return (\n      <Aux>\n        <Container id='bugerbuilder-container'>\n          <Grid stackable>\n            <Grid.Row>\n              <Grid.Column width={7} textAlign='right'>\n                <Fade down>\n                  <Burger\n                    ingredients={this.props.ingredientQueue}\n                    isNight={this.props.isNight}\n                    nightStyle={this.props.nightStyle}\n                  />\n                </Fade>\n\n                <Fade down>\n                  <Ingredients\n                    ingredients={this.props.ingredients}\n                    totalPrice={this.props.totalPrice}\n                    showTotal={this.state.stepNumber > 2} />\n                </Fade>\n              </Grid.Column>\n\n              <Grid.Column width={9} id={rightPanelStyle} className='burgerbuilder-right-steps'>\n                <div className={this.state.stepNumber === 1 ? null : 'burgerbuilder-right-step-opacity'}>\n                  <Fade up>\n                    <BuildControls\n                      ingredientAdded={this.props.onIngredientAdded}\n                      ingredientRemoved={this.props.onIngredientRemoved}\n                      ingredientRemove={this.props.onIngredientClear}\n                      disabled={disabledInfo}\n                      price={this.props.totalPrice}\n                      ordered={this.purchaseHander}\n                      clear={() => this.props.onIngredientsClear()}\n                      canOrder={this.updatePurchaseState(this.props.ingredients, 'canOrder')}\n                      isNight={this.props.isNight}\n                      nightStyle={this.props.nightStyle}\n                      visible={true}\n                      changeStep={this.changeStep}\n                      stepNumber={this.state.stepNumber}\n                    />\n                  </Fade>\n                </div>\n\n                <div className={this.state.stepNumber === 2 ? null : 'burgerbuilder-right-step-opacity'}>\n                  <Fade up>\n                    <OrderSummary\n                      visible={true}\n                      ingredients={this.props.ingredients}\n                      itemPrices={INGREDIENT_PRICES}\n                      isNight={this.props.isNight}\n                      nightStyle={this.props.nightStyle}\n                      price={this.props.totalPrice}\n                      changeStep={this.changeStep}\n                      stepNumber={this.state.stepNumber}\n                    />\n                  </Fade>\n                </div>\n\n                <div className={this.state.stepNumber === 3 ? null : 'burgerbuilder-right-step-opacity'}>\n                  <Checkout\n                    {...this.props}\n                    visible={true}\n                    isNight={this.props.isNight}\n                    nightStyle={this.props.nightStyle}\n                    cancelOrder={this.cancelOrderHander}\n                    addOrder={this.props.addOrder}\n                    burgerState={this.state}\n                    itemClick={this.props.itemClick}\n                    changeStep={this.changeStep}\n                    stepNumber={this.state.stepNumber}\n                    formComplete={this.formComplete}\n                  />\n                </div>\n\n                <div className={this.state.stepNumber === 4 ? null : 'burgerbuilder-right-step-opacity'}>\n                  <Receipt\n                    {...this.props}\n                    changeStep={this.changeStep}\n                    isNight={this.props.isNight}\n                    nightStyle={this.props.nightStyle}\n                    price={this.props.totalPrice}\n                    inputMap={this.props.inputMap}\n                    addOrder={this.props.onOrderAdded}\n                    itemClick={this.props.itemClick}\n                    form={this.state.form}\n                    clearBuilder={this.props.onIngredientsClear}\n                  />\n                </div>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.build.ingredients,\n    totalPrice: state.build.totalPrice,\n    ingredientQueue: state.build.ingredientQueue,\n    inputMap: state.order.inputMap,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: (ingredientName) => dispatch(actions.ingredientAdded(ingredientName)),\n    onIngredientRemoved: (ingredientName) => dispatch(actions.ingredientRemoved(ingredientName)),\n    onIngredientClear: (ingredientName) => dispatch(actions.ingredientClear(ingredientName)),\n    onIngredientsClear: () => dispatch(actions.ingredientsClear()),\n    onOrderAdded: (orderDetails, burgerIngredients, burgerPrice) => dispatch(actions.orderAdded(orderDetails, burgerIngredients, burgerPrice)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BurgerBuilder);\n","import * as actionTypes from './actionTypes';\n\nexport const ingredientAdded = (ingredientName) => {\n  return {\n    type: actionTypes.ADD_INGREDIENT,\n    ingredientName: ingredientName,\n  };\n};\n\nexport const ingredientRemoved = (ingredientName) => {\n  return {\n    type: actionTypes.REMOVE_INGREDIENT,\n    ingredientName: ingredientName,\n  };\n};\n\nexport const ingredientClear = (ingredientName) => {\n  return {\n    type: actionTypes.REMOVE_INGREDIENTS,\n    ingredientName: ingredientName,\n  };\n};\n\nexport const ingredientsClear = () => {\n  return {\n    type: actionTypes.REMOVE_ALL_INGREDIENTS,\n  };\n};\n\nexport const loadData = (orderData) => {\n  return {\n    type: actionTypes.LOAD_DATA_REORDER,\n    orderData: orderData,\n  };\n};\n","import React, { Component } from 'react';\n\nimport { Button, Card, Grid, Label, List, Table, Transition } from 'semantic-ui-react';\nimport './Order.css';\n\nimport Aux from '../../../hoc/Auxilliary';\nimport Ingredients from '../../../components/UI/Ingredients/Ingredients';\n\nclass Order extends Component {\n  constructor() {\n    super();\n    setTimeout(() => {\n      this.setState({\n        isVisible: true\n      });\n    }, 10);\n  }\n\n  state = {\n    isVisible: false,\n  }\n\n  changeVisibility = () => this.setState({ isVisible: !this.state.isVisible });\n  getRandomInt = (max) => Math.floor(Math.random() * Math.floor(max))\n\n  render() {\n    const date = this.props.item.date.toLocaleString();\n    const dateSplit = date.split(', ');\n    const animationDuration = 600;\n\n    return (\n      <Aux>\n        {this.props.isCardView ?\n          <Transition\n            visible={this.state.isVisible}\n            animation='fade down'\n            duration={{ hide: animationDuration, show: animationDuration }}\n          >\n            <Grid.Column style={{ marginTop: '28px' }} computer={4} tablet={8}>\n              <Card style={this.props.isNight ? this.props.nightStyle[1] : null} className='order-card'>\n                <Card.Content className='order-main-content'>\n                  <Card.Header style={this.props.isNight ? { color: 'white' } : null} className='order-remove'>\n                    <Button.Group\n                      className='order-tools-btn-grp'\n                      id='order-tools-toggle'\n                      buttons={[\n                        {\n                          icon: 'shop',\n                          key: 'shop',\n                          onClick: () => {\n                            this.props.loadData(this.props.orders[this.props.count]);\n                            this.props.itemClick('', { name: 'builder' });\n                            this.props.history.push('/builder');\n                          },\n                        },\n                        {\n                          icon: 'minus',\n                          key: 'less',\n                          onClick: () => {\n                            this.changeVisibility();\n                            setTimeout(() => {\n                              this.props.orderRemoved(this.props.item);\n                            }, animationDuration);\n                          }\n                        },\n                      ]}\n                    />\n                  </Card.Header>\n                  <Card.Description style={this.props.isNight ? { color: 'white' } : null}>\n                    <List>\n                      <List.Item>\n                        <List.Content className='secondary-font font-normal'>{dateSplit[0]}</List.Content>\n                      </List.Item>\n                      <List.Item>\n                        <List.Content className='secondary-font font-normal'>{dateSplit[1]}</List.Content>\n                      </List.Item>\n                    </List>\n                    <Ingredients\n                      ingredients={this.props.item.ingredients}\n                      totalPrice={this.props.item.totalPrice}\n                      showTotal\n                    />\n                  </Card.Description>\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n          </Transition>\n\n          :\n\n          <Transition\n            visible={this.state.isVisible}\n            animation='fade right'\n            duration={{ hide: animationDuration, show: animationDuration }}\n          >\n            <Table.Row style={{ margin: '-15px 0' }}>\n              <Table.Cell width={3} className='secondary-font'>\n                {dateSplit[0]}\n              </Table.Cell>\n              <Table.Cell width={3} className='secondary-font'>\n                {dateSplit[1]}\n              </Table.Cell>\n              <Table.Cell width={6}>\n                <Ingredients\n                  ingredients={this.props.item.ingredients}\n                  totalPrice={this.props.item.totalPrice}\n                  showTotal\n                />\n              </Table.Cell>\n              <Table.Cell width={1}>\n                <Button.Group\n                  buttons={[\n                    {\n                      icon: 'shop',\n                      key: 'shop',\n                      onClick: () => {\n                        this.props.loadData(this.props.orders[this.props.count]);\n                        this.props.itemClick('', { name: 'builder' });\n                        this.props.history.push('/builder');\n                      },\n                    },\n                    {\n                      icon: 'minus',\n                      key: 'less',\n                      onClick: () => {\n                        this.changeVisibility();\n                        setTimeout(() => {\n                          this.props.orderRemoved(this.props.item);\n                        }, animationDuration);\n                      }\n                    },\n                  ]}\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Transition>\n        }\n      </Aux>\n    );\n  }\n}\n\nexport default Order;\n","import React from 'react';\n\nimport { Button, Label, List, Responsive, Segment, Icon } from 'semantic-ui-react';\nimport { Slide } from 'react-reveal';\n\nimport './OrderTools.css';\n\nimport Aux from '../../../hoc/Auxilliary';\n\nconst orderTools = (props) => {\n  const sortBy = (isText) => {\n    return (\n      <Button.Group className='order-tools-btn-grp' id='order-tools-toggle' >\n        <Button\n          active={props.activeSort === 'date'}\n          key='date'\n          name='date'\n          onClick={props.activeSort === 'date' ? props.toggleOrder : props.switchViewSort}\n          order='dateOrder'\n          statename='activeSort'\n          className='order-tools-divider'\n        >\n          <Icon name={props.dateOrder ? 'arrow down' : 'arrow up'} />\n          {isText ?\n            <Icon name='calendar alternate' style={{ marginRight: '-0px' }} />\n\n            :\n\n            <Aux>\n              <Responsive minWidth={1200} style={{ display: 'inline' }} className='secondary-font'>date</Responsive>\n              <Responsive as={Icon} name='calendar alternate' style={{ marginRight: '-0px' }} maxWidth={1200} />\n            </Aux>\n          }\n        </Button>\n        <Button\n          active={props.activeSort === 'price'}\n          key='price'\n          name='price'\n          onClick={props.activeSort === 'price' ? props.toggleOrder : props.switchViewSort}\n          order='priceOrder'\n          statename='activeSort'\n        >\n          <Icon name={props.priceOrder ? 'arrow down' : 'arrow up'} />\n          {isText ?\n            <Icon name='money bill alternate outline' />\n\n            :\n\n            <Aux>\n              <Responsive minWidth={1200} style={{ display: 'inline' }} className='secondary-font'>price</Responsive>\n              <Responsive as={Icon} name='money bill alternate outline' style={{ marginRight: '-0px' }} maxWidth={1200} />\n            </Aux>\n          }\n        </Button>\n      </Button.Group>\n    );\n  }\n\n  const ingredientSort = (hasContent) => {\n    return (\n      <Button.Group\n        className='order-tools-btn-grp'\n        buttons={[\n          {\n            key: 'salad',\n            color: props.isSaladActive ? 'green' : null,\n            icon: props.isSaladActive ? 'check' : 'remove',\n            onClick: () => props.toggleIngredient('isSaladActive'),\n            name: 'salad',\n            className: 'secondary-font order-tools-divider',\n          },\n          {\n            key: 'tomato',\n            color: props.isTomatoActive ? 'red' : null,\n            icon: props.isTomatoActive ? 'check' : 'remove',\n            onClick: () => props.toggleIngredient('isTomatoActive'),\n            name: 'tomato',\n            className: 'secondary-font order-tools-divider',\n          },\n          {\n            key: 'meat',\n            color: props.isMeatActive ? 'brown' : null,\n            icon: props.isMeatActive ? 'check' : 'remove',\n            onClick: () => props.toggleIngredient('isMeatActive'),\n            name: 'meat',\n            className: 'secondary-font order-tools-divider',\n          },\n          {\n            key: 'cheese',\n            color: props.isCheeseActive ? 'yellow' : null,\n            icon: props.isCheeseActive ? 'check' : 'remove',\n            onClick: () => props.toggleIngredient('isCheeseActive'),\n            name: 'cheese',\n            className: 'secondary-font',\n          },\n        ]}\n      />\n    );\n  };\n\n  const changeLayout = (hasContent) => {\n    return (\n      <Button.Group\n        className='order-tools-btn-grp'\n        id='order-tools-toggle'\n        buttons={[\n          {\n            active: props.activeLayout === 'card',\n            key: 'card',\n            icon: 'grid layout',\n            content: hasContent ? 'card' : null,\n            onClick: props.switchViewSort,\n            name: 'card',\n            statename: 'activeLayout',\n            className: 'secondary-font order-tools-divider',\n          },\n          {\n            active: props.activeLayout === 'list',\n            key: 'list',\n            icon: 'list',\n            content: hasContent ? 'list' : null,\n            onClick: props.switchViewSort,\n            name: 'list',\n            statename: 'activeLayout',\n            className: 'secondary-font',\n          },\n        ]}\n      />\n    );\n  };\n\n  return (\n    <div className='order-tools-container'>\n      <Responsive minWidth={Responsive.onlyTablet.minWidth}>\n        <Segment basic textAlign='right' id='order-tools-segment'>\n          <Slide left>\n            <Responsive minWidth={Responsive.onlyComputer.minWidth}>\n              <div style={{ display: 'inline' }}>\n                {changeLayout(true)}\n              </div>\n              <div style={{ display: 'inline' }}>\n                {sortBy(false)}\n              </div>\n              <div style={{ display: 'inline' }}>\n                {ingredientSort(true)}\n              </div>\n            </Responsive>\n          </Slide>\n\n          <Responsive {...Responsive.onlyTablet}>\n            {ingredientSort(false)}\n            {changeLayout(false)}\n          </Responsive>\n        </Segment>\n      </Responsive>\n\n      <Responsive {...Responsive.onlyMobile}>\n        <Segment textAlign='right' id='order-tools-mobile' inverted={props.isNight}>\n          <List>\n            <List.Item>\n              <Button\n                icon={props.isOpen ? 'arrow right' : 'arrow left'}\n                onClick={() => {\n                  props.toggleTools();\n                  const position = props.isOpen ? '288px' : '0px';\n                  document.getElementById('order-tools-mobile').style.transform = 'translate(' + position + ')';\n                }}\n                style={{ marginRight: '16px' }}\n              />\n              {ingredientSort(false)}\n            </List.Item>\n          </List>\n        </Segment>\n      </Responsive>\n    </div>\n  );\n}\n\nexport default orderTools;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Container, Grid, Icon, Label, List, Table } from 'semantic-ui-react';\nimport './Orders.css';\n\nimport NotFound from '../../components/NotFound/NotFound';\nimport Order from './Order/Order';\nimport OrderTools from '../../components/Order/OrderTools/OrderTools';\n\nimport * as actions from '../../store/actions/index';\n\nimport Aux from '../../hoc/Auxilliary';\n\nconst labelColor = {\n  salad: 'green',\n  tomato: 'red',\n  cheese: 'yellow',\n  meat: 'brown',\n}\n\nclass Orders extends Component {\n  constructor() {\n    super();\n    setTimeout(() => {\n      this.setState({\n        showCards: true\n      });\n    }, 10);\n  }\n\n  state = {\n    activeLayout: 'card',\n    activeSort: 'date',\n    dateOrder: true,\n    isSaladActive: true,\n    isTomatoActive: true,\n    isMeatActive: true,\n    isCheeseActive: true,\n    isMobileToolsOpen: true,\n    isModalOpen: false,\n    item: {\n      date: null,\n      details: null,\n      ingredients: {},\n      totalPrice: null,\n    },\n    showCards: false,\n    priceOrder: true,\n  }\n\n  addContactDetails = (details) => {\n    return (\n      <List>\n        <List.Item>\n          <List.Icon name='home' />\n          <List.Content>{details.address}</List.Content>\n        </List.Item>\n        <List.Item>\n          <List.Icon name='phone' />\n          <List.Content>{details.number}</List.Content>\n        </List.Item>\n        <List.Item>\n          <List.Icon name='mail' />\n          <List.Content>\n            <a href={'mailto:' + details.email}>{details.email}</a>\n          </List.Content>\n        </List.Item>\n      </List>\n    );\n  }\n\n  filterIngredients = () => {\n    let filteredOrders = [];\n    let index = 0;\n\n    this.props.ordersLocal.forEach((item) => {\n      let toPush = false;\n      if (item.ingredients.cheese > 0 && this.state.isCheeseActive) toPush = true;\n      else if (item.ingredients.salad > 0 && this.state.isSaladActive) toPush = true;\n      else if (item.ingredients.meat > 0 && this.state.isMeatActive) toPush = true;\n      else if (item.ingredients.tomato > 0 && this.state.isTomatoActive) toPush = true;\n      if (toPush) filteredOrders[index++] = item;\n    })\n\n    if (this.state.activeSort === 'date') {\n      filteredOrders.sort((a, b) => {\n        if (this.state.dateOrder) return new Date(a.date) - new Date(b.date);\n        return new Date(b.date) - new Date(a.date);\n      });\n    }\n    else {\n      filteredOrders.sort((a, b) => {\n        if (this.state.priceOrder) return a.totalPrice - b.totalPrice;\n        return b.totalPrice - a.totalPrice;\n      });\n    }\n\n    return filteredOrders;\n  }\n\n  toggleOrder = (e, { order }) => {\n    this.resetView();\n    this.setState({ [order]: !this.state[order] });\n  }\n\n  switchViewSortHandler = (e, { name, statename }) => {\n    this.resetView();\n    this.setState({ [statename]: name });\n  }\n\n  toggleIngredientHandler = (name) => {\n    this.resetView();\n    this.setState({ [name]: !this.state[name] });\n  }\n\n  toggleToolsHandler = () => {\n    this.resetView();\n    this.setState({ isMobileToolsOpen: !this.state.isMobileToolsOpen });\n  }\n\n  handleOpen = () => this.setState({ isModalOpen: true })\n  handleClose = () => this.setState({ isModalOpen: false })\n  updateItem = (item) => this.setState({ item: item })\n\n  resetView = () => {\n    this.setState({ showCards: false });\n    setTimeout(() => {\n      this.setState({ showCards: true });\n    }, 50);\n  }\n\n  render() {\n    let message = null;\n    if (this.props.ordersLocal.length === 0) {\n      message = (\n        <NotFound\n          isNight={this.props.isNight}\n          nightStyle={this.props.nightStyle}\n          iconName='exclamation triangle'\n          mainMessage='Nothing here yet.'\n          subMessage='List of recent orders will appear here as soon as an order is placed.'\n        />\n      );\n    }\n\n    const isCardView = this.state.activeLayout === 'card';\n\n    let orders = this.filterIngredients();\n    const orderStructure = (item, count) => {\n      return (\n        <Order\n          {...this.props}\n          addOrderDetails={this.addOrderDetails}\n          count={count}\n          handleOpen={this.handleOpen}\n          isCardView={isCardView}\n          isNight={this.props.isNight}\n          itemClick={this.props.itemClick}\n          item={item}\n          key={count}\n          nightStyle={this.props.nightStyle}\n          orderRemoved={this.props.removeOrder}\n          showCards={this.state.showCards}\n          hideCards={this.hideCards}\n          updateItem={this.updateItem}\n          loadData={this.props.loadData}\n          orders={orders}\n        />\n      );\n    };\n\n    return (\n      <Container className='orders-container'>\n        {message ?\n          message\n\n          :\n\n          <Aux>\n            {orders.length !== 0 ?\n              isCardView ?\n                <Grid stackable>\n                  <Grid.Row>\n                    {orders.map((item, count) => { return orderStructure(item, count); })}\n                  </Grid.Row>\n                </Grid>\n\n                :\n\n                <div className='orders-table'>\n                  <Table basic='very' compact='very' selectable singleLine unstackable inverted={this.props.isNight} textAlign='center'>\n                    <Table.Header>\n                      <Table.Row>\n                        <Table.HeaderCell sorted='ascending'>\n                          &nbsp; DATE\n                        </Table.HeaderCell>\n                        <Table.HeaderCell>\n                          &nbsp; TIME\n                        </Table.HeaderCell>\n                        <Table.HeaderCell>\n                          &nbsp; ORDER DETAILS\n                        </Table.HeaderCell>\n                        <Table.HeaderCell>\n                        </Table.HeaderCell>\n                      </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                      {orders.map((item, count) => { return orderStructure(item, count); })}\n                    </Table.Body>\n                  </Table>\n                </div>\n\n              :\n\n              <NotFound\n                isNight={this.props.isNight}\n                nightStyle={this.props.nightStyle}\n                iconName='frown outline'\n                mainMessage='No results.'\n                subMessage={'Nobody ordered a bun-only burger. Besides, it is not possible in the first place.'}\n              />\n            }\n\n            <OrderTools\n              activeLayout={this.state.activeLayout}\n              activeSort={this.state.activeSort}\n              dateOrder={this.state.dateOrder}\n              isCheeseActive={this.state.isCheeseActive}\n              isMeatActive={this.state.isMeatActive}\n              isNight={this.props.isNight}\n              isOpen={this.state.isMobileToolsOpen}\n              isSaladActive={this.state.isSaladActive}\n              isTomatoActive={this.state.isTomatoActive}\n              priceOrder={this.state.priceOrder}\n              toggleIngredient={this.toggleIngredientHandler}\n              toggleOrder={this.toggleOrder}\n              toggleTools={this.toggleToolsHandler}\n              switchViewSort={this.switchViewSortHandler}\n            />\n          </Aux>\n        }\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ordersLocal: state.order.ordersLocal,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    removeOrder: (order) => dispatch(actions.orderRemove(order)),\n    loadData: (order) => dispatch(actions.loadData(order)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport SidebarMobile from './components/Layout/SidebarMobile/SidebarMobile';\nimport Home from './containers/Home/Home';\nimport NotFound from './components/NotFound/NotFound';\n\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Orders from './containers/Orders/Orders';\n\nconst nightStyle = [\n  { // segment\n    backgroundColor: '#373737',\n    borderStyle: 'none',\n    color: 'white',\n  },\n  { // label headers\n    backgroundColor: '#272727',\n    borderColor: '#272727',\n    borderRadius: '0.28571429rem 0.28571429rem 0.28571429rem 0.28571429rem',\n    color: 'white',\n    boxShadow: 'none',\n  },\n  { // buttons\n    fontWeight: '600',\n  },\n  { // list\n    backgroundColor: '#333333',\n    borderStyle: 'none',\n    color: 'white',\n  },\n];\n\nclass App extends Component {\n  state = {\n    activeItem: window.location.hash.replace('#/', ''),\n    openSidebar: false,\n    isNightMode: false,\n    showScroll: true,\n  }\n\n  itemClickHandler = (e, { name }) => this.setState({ activeItem: name })\n  sidebarHandler = () => this.setState({ openSidebar: !this.state.openSidebar })\n  closeSidebar = () => this.setState({ openSidebar: false })\n  nightModeHandler = () => this.setState({ isNightMode: !this.state.isNightMode })\n\n  render() {\n    return (\n      <div style={{ overflow: 'hidden' }}>\n        <SidebarMobile\n          itemClick={this.itemClickHandler}\n          activeItem={this.state.activeItem}\n          openSidebar={this.sidebarHandler}\n          closeSidebar={this.closeSidebar}\n          sidebarVisible={this.state.openSidebar}\n          isNight={this.state.isNightMode}\n          toggleNight={this.nightModeHandler}\n        >\n          <Switch>\n            <Route path='/builder' render={(props) =>\n              <BurgerBuilder\n                {...props}\n                isNight={this.state.isNightMode}\n                nightStyle={nightStyle}\n                addOrder={this.addOrderHandler}\n                itemClick={this.itemClickHandler}\n                activeItem={this.state.activeItem}\n              />\n            } />\n\n            <Route path='/orders' render={(props) =>\n              <Orders\n                {...props}\n                isNight={this.state.isNightMode}\n                nightStyle={nightStyle}\n                itemClick={this.itemClickHandler}\n              />\n            } />\n\n            <Route path='/help' render={(props) =>\n              <NotFound\n                isNight={this.state.isNightMode}\n                nightStyle={nightStyle}\n                iconName='help'\n                mainMessage={'Help?! You don\\'t need any.'}\n                subMessage={'I know you can figure this out on your own 😏'}\n              />\n            } />\n\n            <Route path='/' exact render={(props) =>\n              <Home\n                {...props}\n                isNight={this.state.isNightMode}\n                nightStyle={nightStyle}\n                itemClick={this.itemClickHandler}\n              />\n            } />\n\n            <Route render={(props) =>\n              <NotFound\n                isNight={this.state.isNightMode}\n                nightStyle={nightStyle}\n                iconName='ban'\n                mainMessage='Page not found.'\n                subMessage='Try clicking the links in the navigation area for you to be redirected on an existing page.'\n              />\n            } />\n          </Switch>\n        </SidebarMobile>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedValues) => {\n\treturn {\n\t\t...oldObject,\n\t\t...updatedValues\n\t}\n};\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility.js';\n\nconst ingredientPrices = {\n  salad: 0.50,\n  tomato: 0.40,\n  cheese: 1.30,\n  meat: 0.70,\n};\n\nconst initialState = {\n  ingredients: {\n    salad: 0,\n    tomato: 0,\n    cheese: 0,\n    meat: 0,\n  },\n  totalPrice: 4,\n  ingredientQueue: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT: return addIngredient(state, action);\n    case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\n    case actionTypes.REMOVE_INGREDIENTS: return removeIngredientInstances(state, action);\n    case actionTypes.REMOVE_ALL_INGREDIENTS: return updateObject(state, initialState);\n    case actionTypes.LOAD_DATA_REORDER: return loadData(state, action);\n    default: return state;\n  }\n};\n\nconst addIngredient = (state, action) => {\n  return updateObject(state, {\n    ingredients: {\n      ...state.ingredients,\n      [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\n    },\n    totalPrice: state.totalPrice + ingredientPrices[action.ingredientName],\n    ingredientQueue: state.ingredientQueue.concat(action.ingredientName),\n  });\n}\n\nconst removeIngredient = (state, action) => {\n  let updatedIngredientQueue = [...state.ingredientQueue];\n  updatedIngredientQueue = updatedIngredientQueue.reverse();\n  const index = updatedIngredientQueue.indexOf(action.ingredientName);\n  if (index !== -1) updatedIngredientQueue.splice(index, 1);\n  updatedIngredientQueue = updatedIngredientQueue.reverse();\n\n  return updateObject(state, {\n    ingredients: {\n      ...state.ingredients,\n      [action.ingredientName]: state.ingredients[action.ingredientName] - 1,\n    },\n    totalPrice: state.totalPrice - ingredientPrices[action.ingredientName],\n    ingredientQueue: updatedIngredientQueue,\n  });\n}\n\nconst removeIngredientInstances = (state, action) => {\n  const lowercasedName = action.ingredientName.toLowerCase();\n  const updatedArray = state.ingredientQueue.filter(result => result !== lowercasedName, []);\n\n  return updateObject(state, {\n    totalPrice: state.totalPrice - (ingredientPrices[lowercasedName] * state.ingredients[lowercasedName]),\n    ingredients: {\n      ...state.ingredients,\n      [lowercasedName]: 0,\n    },\n    ingredientQueue: updatedArray,\n  });\n}\n\nconst loadData = (state, action) => {\n  return updateObject(state, {\n    ingredients: action.orderData.ingredients,\n    totalPrice: action.orderData.totalPrice,\n    ingredientQueue: [],\n  });\n}\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility.js';\n\nconst initialState = {\n  inputMap: [\n    { name: 'fname', value: '', error: false, entry: 'First name' },\n    { name: 'lname', value: '', error: false, entry: 'Last name' },\n    { name: 'email', value: '', error: false, entry: 'Email' },\n    { name: 'numbe', value: '', error: false, entry: 'Contact number' },\n    { name: 'addre', value: '', error: false, entry: 'Delivery address' },\n  ],\n  ordersLocal: [\n    {\n      date: new Date(),\n      details: {name: \"John Doe\", email: \"a\", number: \"a\", address: \"undefined\"},\n      ingredients: {salad: 1, tomato: 1, cheese: 1, meat: 1},\n      ingredientQueue: ['salad', 'tomato', 'cheese', 'meat'],\n      totalPrice: 4.7,\n    },\n  ],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_ORDER: return addOrder(state, action);\n    case actionTypes.REMOVE_ORDER: return removeOrder(state, action);\n    case actionTypes.ORDER_DETAILS: return addOrderDetails(state, action);\n    default: return state;\n  }\n};\n\nconst addOrder = (state, action) => {\n  const transformedOrder = {};\n  for (const item in action.orderDetails) {\n    transformedOrder[action.orderDetails[item].name] = action.orderDetails[item].value;\n  }\n\n  const address = transformedOrder.lotno + ' ' +\n    transformedOrder.stree + ', ' +\n    transformedOrder.brggy + ', ' +\n    transformedOrder.cimun + ', ' +\n    transformedOrder.provi;\n\n  let newOrder = {\n    ingredients: {\n      salad: action.burgerIngredients.salad,\n      tomato: action.burgerIngredients.tomato,\n      cheese: action.burgerIngredients.cheese,\n      meat: action.burgerIngredients.meat,\n    },\n    totalPrice: action.burgerPrice,\n    details: {\n      name: transformedOrder.fname + ' ' + transformedOrder.lname,\n      email: transformedOrder.email,\n      number: transformedOrder.numbe,\n      address: address,\n    },\n    date: new Date(),\n  }\n\n  return updateObject(state, {\n    ordersLocal: state.ordersLocal.concat(newOrder),\n  });\n};\n\nconst removeOrder = (state, action) => {\n  const updatedOrders = [...state.ordersLocal];\n\n  const answer = updatedOrders.find(order => {\n    return order.date === action.order.date &&\n      order.totalPrice === action.order.totalPrice &&\n      order.ingredients.salad === action.order.ingredients.salad &&\n      order.ingredients.meat === action.order.ingredients.meat &&\n      order.ingredients.tomato === action.order.ingredients.tomato &&\n      order.ingredients.cheese === action.order.ingredients.cheese;\n  })\n\n  const result = [];\n  updatedOrders.map((order) => {\n    if (order !== answer) result.push(order);\n    return null;\n  })\n\n  return updateObject(state, {\n    ordersLocal: result,\n  });\n};\n\nconst addOrderDetails = (state, action) => {\n  return updateObject(state, {\n    inputMap: action.orderDetails,\n  });\n}\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport { HashRouter } from 'react-router-dom';\n\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport ordersReducer from './store/reducers/orders';\n\nconst rootReducer = combineReducers({\n  build: burgerBuilderReducer,\n  order: ordersReducer,\n});\n\nconst store = createStore(rootReducer);\n\nconst app = (\n  <Provider store={store}>\n    <HashRouter base='/'>\n      <App/>\n    </HashRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}